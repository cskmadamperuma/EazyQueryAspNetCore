@{
    ViewBag.Title = "Ad-hoc reporting example built with EasyQuery";
    ViewBag.SubTitle = "ad-hoc reporting example built with EasyQuery";
}


<!--EasyQuery CSS files -->
<link href="//cdn.korzh.com/eq/4.3/themes/default/easyquery.min.css" rel="stylesheet" type="text/css" media="screen" />
<link href="//cdn.korzh.com/eq/4.3/themes/default/eq-icons-default.min.css" rel="stylesheet" type="text/css" media="screen" />
<link href="//cdn.korzh.com/eq/4.3/themes/default/easychart.min.css" rel="stylesheet" type="text/css" media="screen" />

<!-- EasyQuery widgets settings -->
<script type="text/javascript">

    // Load the Visualization API and the piechart package.
    google.charts.load('visualization', '1.0', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(GoogleVisualizationLoaded);

    function GoogleVisualizationLoaded() {
        //alert("Visualization loaded!!!");
    }

    function getPrefix() {
        var res = window.location.pathname;
        if (res.charAt(res.length - 1) !== '/')
            res = res + '/';
        return res;
    }

    window.easyQuerySettings = {
        serviceUrl: "/EasyReport",
        loadDefaultModel: true,
        entitiesPanel: { showCheckboxes: true },
        useBootstrap: true,
        columnsBar: {
            accentActiveColumn: false,
            allowAggrColumns: true,
            attrElementFormat: "{attr}",
            showColumnCaptions: true,
            adjustEntitiesMenuHeight: false,
            menuOptions: {
                showSearchBoxAfter: 30,
                activateOnMouseOver: true
            }

        },
        queryPanel: {
            alwaysShowButtonsInPredicates: false,
            adjustEntitiesMenuHeight: false,
            menuOptions: {
                showSearchBoxAfter: 20,
                activateOnMouseOver: true
            }
        },
        syncQueryOptions: {
            sqlOptions: { SelectDistinct: true }
        },

        //an example of "List Request" handler for "Custom List" value editors
        listRequestHandler: function (params, onResult) {
            var processed = true;
            if (params.listName == "Regions") {
                var query = EQ.client.getQuery();

                //trying to get currently selected country (if there is such condition)
                var country = query.getOneValueForAttr(query, "Customer.Country");

                if (country == "Canada") {
                    onResult([
                        { id: "BC", text: "British Columbia" },
                        { id: "Quebec", text: "Quebec" }
                    ]);

                }
                else {
                    onResult([
                        { id: "CA", text: "California" },
                        { id: "CO", text: "Colorado" },
                        { id: "OR", text: "Oregon" },
                        { id: "WA", text: "Washington" }
                    ]);
                }
            }
            else
                processed = false;

            return processed;
        }

    };

    window.easyQueryViewSettings = {
        showChart: true,
        useEasyChart: true,
        paging: {
            maxButtonCount: 10,
            cssClass: 'pagination-sm'
        }
    };

</script>
<div class="row">
    <div class="col-md-3">
        <div class="panel panel-default" style="min-height:300px;">
            <div class="panel-heading panel-title">
                <div class="btn-group pull-right">
                    <button type="button" class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown">
                        <span class="glyphicon glyphicon-cog"></span> <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a id="NewReportButton" href="javascript:void(0)">New report</a></li>
                        <li><a id="SaveReportButton" href="javascript:void(0)">Save as...</a></li>
                        <li class="divider"></li>
                        <li><a id="RemoveReportButton" href="javascript:void(0)">Remove report</a></li>
                    </ul>
                </div>
                <span class="panel-title">Reports</span>

            </div>
            <div id="ReportList" class="panel-body">
            </div>
        </div>
    </div>

    <div class="col-md-9">
        <div id="ReportPanel" class="panel panel-default" style="display:none;">
            <div class="panel-heading panel-title">
                <div class="panel-buttons">
                    <button id="UpdateReportButton" type="button" class="btn btn-default btn-sm" title="Refresh result set">
                        <span class="glyphicon glyphicon-refresh"></span>
                    </button>
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-export"></span> <span class="caret"></span>
                        </button>
                        <form id="ExportQueryResultForm" asp-controller="EasyReport" asp-action="ExportToFile" method="post">
                            <input type="hidden" id="queryToSaveJson" name="queryJson" />
                            <input type="hidden" id="exportFileType" name="fileType" />
                        </form>
                        <ul class="dropdown-menu" role="menu">
                            <li><a id="ExportToExcel" href="javascript:void(0)">Export to Excel</a></li>
                            <li><a id="ExportToCsv" href="javascript:void(0)">Export to CSV</a></li>
                        </ul>
                    </div>
                </div>
                <span id="ReportTitle">Sales by product</span>

            </div>
            <div class="columns-block">
                <div class="columns-caption">Columns:</div>
                <div id="ColumnsBar"></div>
                <!-- <div id="ColumnsPanel"></div> -->
            </div>

            <div id="QueryPanel" class="query-panel"></div>
            <div id="ResultPanel" class="result-panel-content">
            </div>
        </div>
        <div id="NoReportPanel" style="display:none;height:300px;padding-top:100px;">
            <h3 class="text-center">
                No reports are defined. <a id="FirstReportButton" href="javascript:EQ.view.report.newReport()">Create a first one</a> to start.
            </h3>
        </div>


    </div>


</div>


@section Scripts {
    <!--ChartJS script file
          <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js" type="text/javascript"></script>
         -->
    <!-- EasyQuery script files -->
    <script src="//cdn.korzh.com/eq/4.3/eq.all.min.js" type="text/javascript"></script>
    <script src="//cdn.korzh.com/eq/4.3/eq.view.report.min.js" type="text/javascript"></script>
    <script src="//cdn.korzh.com/eq/4.3/easychart.min.js" type="text/javascript"></script>
    <script src="//cdn.korzh.com/eq/4.3/easychart.google.min.js" type="text/javascript"></script>
    <!--You can use ChartJS library instead of Google Charts.
        Uncomment ChartJS script file to use it
     <script src="//cdn.korzh.com/eq/4.3/easychart.chartjs.min.js" type="text/javascript"></script>
        -->

    <script type="text/javascript">
        $(function () {

            //TestButton click event hanlder. Implements different functionality with query and models.
            //Uncomment the part you would like to try
            $("#TestButton").click(function () {
                //how to get current Query
                var query = EQ.client.getQuery();

                //Here we show how to load another data model
                EQ.client.loadModel({ modelName: "Model1" });

                //The next line demonstrates how to add a condition into existing query
                //query.addSimpleCondition({ attr: "Customers.CompanyName", operator: "StartsWith", value: "A" });

            });


            var defaultQuery = {
                "root": { "linkType": "All", "enabled": true, "conditions": [] },
                "columns": [
                    { "caption": "Customer Company name", "readOnly": true, "sorting": "None", "sortIndex": -1, "expr": { "typeName": "ENTATTR", "id": "Customers.CompanyName" } },
                    { "caption": "Order Freight", "readOnly": true, "sorting": "None", "sortIndex": -1, "expr": { "typeName": "ENTATTR", "id": "Orders.Freight" } }
                ],
                "justsorted": []
            };

            $('#ExportToCsv').click(function () {
                var query = EQ.client.getQuery();
                var queryJson = query.toJSON();

                $("#queryToSaveJson").val(queryJson);
                $("#exportFileType").val("csv");
                $('#ExportQueryResultForm').submit();
            });

            $('#ExportToExcel').click(function () {
                var query = EQ.client.getQuery();
                var queryJson = query.toJSON();

                $("#queryToSaveJson").val(queryJson);
                $("#exportFileType").val("excel/html");
                $('#ExportQueryResultForm').submit();
            });


            /*
                        var columnsBarOptions = { addButtonHTML: "", allowAggrColumns: false, attrElementFormat: "{attr}", adjustEntitiesMenuHeight: false };
                        var CB = $('#ColumnsBar');
                        CB.ColumnsBar(columnsBarOptions);
            */
        });


    </script>
}


