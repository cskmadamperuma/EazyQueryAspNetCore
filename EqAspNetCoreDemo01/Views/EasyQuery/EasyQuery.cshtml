@{
    ViewData["Title"] = "EasyQuery - ad-hoc query builder for web-sites. ASP.NET Core Demo.";
    string defaultQueryId = ViewData["QueryId"].ToString();
}


<link href="//cdn.korzh.com/eq/4.3/themes/default/easyquery.min.css" rel="stylesheet" type="text/css" media="screen" />
<link href="//cdn.korzh.com/eq/4.3/themes/default/eq-icons-default.min.css" rel="stylesheet" type="text/css" media="screen" />
<link href="//cdn.korzh.com/eq/4.3/themes/default/eqview.min.css" rel="stylesheet" type="text/css" media="screen" />
<link href="//cdn.korzh.com/eq/4.3/themes/default/easychart.min.css" rel="stylesheet" type="text/css" media="screen" />


<!-- EasyQuery widgets settings -->
<script type="text/javascript">
        var __antiForgeryTokenInput = document.querySelector('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]');
        var __antiForgeryToken = __antiForgeryTokenInput != null ? __antiForgeryTokenInput.value : "";

        window.easyQuerySettings = {
            serviceUrl: "/EasyQuery",
            loadDefaultModel: true,
            loadQueryOnStart: true,
            defaultQueryId: "@defaultQueryId",
            onError: function (error) {
                alert(error.type + " error:\n" + error.message);
            },
            //locale: "fr",
            entitiesPanel: {
                showCheckboxes: true,
            },
            columnsPanel: {
                allowAggrColumns: true,
                allowCustomExpressions: true,
                attrElementFormat: "{entity} {attr}",
                titleElementFormat: "{attr}",
                showColumnCaptions: true,
                adjustEntitiesMenuHeight: false,
                customExpressionText: 2,
                showPoweredBy: false,
                menuOptions: {
                    showSearchBoxAfter: 30,
                    activateOnMouseOver: true
                }
            },
            queryPanel: {
                showPoweredBy: false,
                alwaysShowButtonsInPredicates: false,
                allowParameterization: true,
                allowInJoinConditions: true,
                autoEditNewCondition: true,
                buttons: {
                    condition: ["menu"],
                    predicate: ["addCondition", "addPredicate", "enable", "delete"]
                },
                menuOptions: {
                    showSearchBoxAfter: 20,
                    activateOnMouseOver: true
                }
            },
            syncQueryOptions: {
                sqlOptions: {SelectDistinct:true}
            },

            listRequesHandler: function (params, onResult) {
                var processed = true;
                if (params.listName == "RegionList") {
                    var query = EQ.client.getQuery();
                    var country = query.getOneValueForAttr(query, "Customer.Country");
                    if (country == "Canada") {
                        onResult([
                            { id: "BC", text: "British Columbia" },
                            { id: "Quebec", text: "Quebec" }
                        ]);

                    }
                    else {
                        onResult([
                            { id: "CA", text: "California" },
                            { id: "CO", text: "Colorado" },
                            { id: "OR", text: "Oregon" },
                            { id: "WA", text: "Washington" }
                        ]);
                    }
                }
                else
                    processed = false;

                return processed;

            },

            antiForgeryToken: __antiForgeryToken

            };

            window.easyQueryViewSettings = {
                showChart: true,
                useEasyChart: true,
            };

            function getPrefix() {
                var res = window.location.pathname;
                if (res.charAt(res.length - 1) !== '/')
                    res = res + '/';
                return res;
            }

</script>


<div id="main">
    <!--
    <input id="QueryContentJson" type="hidden" value="@ViewBag.QueryJson" />
    -->
    <div class="header">
        <div class="title">EasyQuery</div>
        <div class="sub-title">User-friendly ad-hoc query builder for your web-site</div>
        <div class="global-message">@ViewBag.Message</div>
    </div>
    <div id="content">
        <div class="header-panel">
            <div class="entities-block">
                <hr class="entities-hr hr" />
                <div class="entities-title">Entities</div>
                <div class="entities-panel-container">
                    <!-- EntitiesPanel widget placeholder -->
                    <div id="EntitiesPanel" onselectstart="return false"></div>
                </div>
            </div>

            <div class="central-block">
                <div class="columns-block">
                    <hr class="columns-hr hr" />
                    <div class="columns-title">Columns</div>
                    <div class="columns-panel-container">
                        <!-- ColumnsPanel widget placeholder -->
                        <div id="ColumnsPanel"></div>
                    </div>
                </div>
                <div class="conditions-block">
                    <hr class="conditions-hr hr" />
                    <div class="conditions-title">Conditions</div>
                    <div class="query-panel-container">
                        <!-- QueryPanel widget placeholder -->
                        <div id="QueryPanel"></div>
                    </div>
                </div>
            </div>

            <div class="menu-block">
                <hr class="menu-hr hr" />
                <div class="menu-title">Menu</div>
                <div class="menu-content">
                    <div id="ClearQueryButton" class="eqv-button clear-button">Clear query</div>
                    <form id="LoadQueryForm" asp-controller="EasyQuery" asp-action="LoadQueryFromFile" method="post" enctype="multipart/form-data">
                        <input type="hidden" id="queryToLoadModelId" name="modelId" />
                        <input type="file" id="LoadQueryFileInput" name="queryFile" style="display: none;" />
                    </form>

                    <form id="SaveQueryForm" asp-controller="EasyQuery" asp-action="SaveQueryToFile" method="post">
                        <input type="hidden" id="queryToSaveJson" name="queryJson" />
                    </form>
                    <div id="LoadQueryFileButton" class="eqv-button load-query-button">Load query file</div>
                    <div id="SaveQueryToFileButton" class="eqv-button load-query-button">Save to file</div>



                    <div id="ExecuteQueryButton" class="eqv-button execute-button">Execute</div>

                    <!-- Old version of load/save buttons -->
                    <!--
                    <div id="LoadQueryButton" class="eqv-button load-query-button">Load query</div>
                    <div id="SaveQueryButton" class="eqv-button save-query-button">Save query</div>
                    -->

                    <div><p></p></div>
                    <!-- Test button which perfoms different operation over query and model just for demonstration purposes -->
                    <!-- Uncomment next line if would like to try -->
                    <!--<div id="TestButton" class="eqv-button execute-button" style="display:block">Test</div>-->
                </div>
            </div>
        </div>
        <form id="ExportQueryResultForm" asp-controller="EasyQuery" asp-action="ExportToFile" method="post">
            <input type="hidden" id="queryJsonExport" name="queryJson" />
            <input type="hidden" id="exportFileType" name="fileType" />
        </form>
        <div class="bottom-panel">
            <div class="sql-panel">
                <hr class="sql-panel-hr hr" />
                <div class="sql-panel-title">SQL</div>
                <div id="SqlPanel" class="sql-block">
                    <div class="sql-panel-result"></div>
                </div>
            </div>
            <div class="result-panel">
                <hr class="result-panel-hr hr" />
                <div class="result-panel-title">
                    Result
                    <span id="ResultCount" style="display:none; margin-left:20px; font-size:small"></span>
                    <span id="ResultExportButtons">
                        <a id="ExportToExcel" href="javascript:void(0)">Export to Excel</a>
                        <a id="ExportToCsv" href="javascript:void(0)">Export to CSV</a>
                    </span>

                </div>
                <div id="ResultPanel" class="result-panel-content">
                </div>
                <div class="result-panel-content-padding">
                </div>
            </div>

        </div>
    </div>
    <div id="footer">
        <div class="copyright">
            © Copyright 2006-@(DateTime.Now.Year). <a href="https://korzh.com/" target="_blank">Korzh.com</a>
        </div>
        <div class="power-by">
            Powered by <a href="https://korzh.com/easyquery" target="_blank">EasyQuery</a>
            |
            <a href="http://demo.easyquerybuilder.com" target="_blank">Live demos</a>

        </div>
    </div>

</div>

@section Scripts {
    <!--ChartJS script file -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js" type="text/javascript"></script>
    <!-- EasyQuery script files -->
    <script src="//cdn.korzh.com/eq/4.3/eq.all.min.js" type="text/javascript"></script>
    <script src="//cdn.korzh.com/eq/4.3/eq.view.basic.min.js" type="text/javascript"></script>
    <script src="//cdn.korzh.com/eq/4.3/easychart.min.js" type="text/javascript"></script>
    <!--Here we use provider for ChartJS library-->
    <script src="//cdn.korzh.com/eq/4.3/easychart.chartjs.min.js" type="text/javascript"></script>
    <!--You can use Google Chart library instead of ChartJS.
        Uncomment all Google Charts scripts to use it
     <script src="//cdn.korzh.com/eq/4.3/easychart.google.min.js" type="text/javascript"></script>
        -->

    <script src="~/js/eq.editor.range.js" type="text/javascript"></script>

    <script type="text/javascript">
        /*Uncomment this part to use Google Charts
        // Load the Visualization API and the piechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(GoogleVisualizationLoaded);

        function GoogleVisualizationLoaded() {
            //alert("Visualization loaded!!!");
        }
        */
        $(function () {
            //TestButton click event hanlder. Implements different functionality with query and models.
            //Uncomment the part you would like to try
            $("#TestButton").click(function () {
                var cp = EQ.client.controls.CPWidget;
                //cp.ColumnsPanel("removeColumn", EQ.client.getQuery().query.columns[0]);

                var query = EQ.client.getQuery();
                //query.removeColumn(query.getColumns()[0]);
                query.moveColumn(0, 1);


//                EQ.client.locale = 'ru';
                //how to get current Query
                //var query = EQ.client.getQuery();

                //Here we show how to load another data model
                //EQ.client.loadModel({ modelName: "NWindSQL" });
                //EQ.client.loadQuery({ queryName: "query6" });

                //The next line demonstrates how to add a condition into existing query
                //query.addSimpleCondition({ attr: "Customers.CompanyName", operator: "StartsWith", value: "A" });

            });


            $('#LoadQueryFileInput').change(function () {
                var query = EQ.client.getQuery();
                $("#queryToLoadModelId").val(query.getModel().getId());
                $('#LoadQueryForm').submit();
            });

            $('#LoadQueryFileButton').click(function () {
                $('#LoadQueryFileInput').click();
            });

            $('#SaveQueryToFileButton').click(function () {
                var query = EQ.client.getQuery();
                var queryJson = query.toJSON();

                $("#queryToSaveJson").val(queryJson);
                $('#SaveQueryForm').submit();
            });

            $('#ExportToCsv').click(function () {
                var query = EQ.client.getQuery();
                var queryJson = query.toJSON();

                $("#queryJsonExport").val(queryJson);
                $("#exportFileType").val("csv");
                $('#ExportQueryResultForm').submit();
            });

            $('#ExportToExcel').click(function () {
                var query = EQ.client.getQuery();
                var queryJson = query.toJSON();

                $("#queryJsonExport").val(queryJson);
                $("#exportFileType").val("excel/html");
                $('#ExportQueryResultForm').submit();
            });


            var message = '@ViewBag.Message';
            if (message) {
                $('.global-message').show().delay(5000).hide(2000);
            }
        });


    </script>
}